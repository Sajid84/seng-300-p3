package driver;

import com.jjjwelectronics.Item;
import com.jjjwelectronics.card.Card;
import com.jjjwelectronics.screen.ITouchScreen;
import managers.SystemManager;
import managers.enums.SessionStatus;
import managers.interfaces.IScreen;

import javax.swing.*;
import java.awt.*;
import java.math.BigDecimal;

// LandingPage class represents the landing page of the self-checkout system
public class LandingPage implements IScreen {

    // SystemManager responsible for managing the self-checkout system
    protected final SystemManager sm;

    // GUI components
    protected JPanel root;
    protected JButton startSessionButton;
    protected JLabel welcomeLabel;

    // GUI initializer generated by IntelliJ IDEA GUI Designer
    {
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        // Creating and configuring the layout for the LandingPage GUI
        root = new JPanel();
        root.setLayout(new GridBagLayout());

        // Creating and configuring the "Start Session" button
        startSessionButton = new JButton();
        startSessionButton.setText("Start Session");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        root.add(startSessionButton, gbc);

        // Creating spacers for layout flexibility
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        root.add(spacer1, gbc);

        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.VERTICAL;
        root.add(spacer2, gbc);

        // Creating and configuring the welcome label
        welcomeLabel = new JLabel();
        welcomeLabel.setText("Welcome to The Company!");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        root.add(welcomeLabel, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

    // Constructor that takes a SystemManager as a parameter
    public LandingPage(SystemManager sm) {
        this.sm = sm;
    }

    // Method to get the JPanel associated with this LandingPage
    @Override
    public JPanel getPanel() {
        return root;
    }

    // Method to get the JFrame associated with this LandingPage
    @Override
    public JFrame getFrame() {
        // LandingPage does not have a JFrame, so UnsupportedOperationException is thrown
        throw new UnsupportedOperationException("This object does not have a JFrame.");
    }

    // Method to configure the LandingPage with an ITouchScreen (not implemented in this case)
    @Override
    public void configure(ITouchScreen touchScreen) {
        // Not implemented
    }

    // Getter method for the "Start Session" button
    public JButton getStartSessionButton() {
        return startSessionButton;
    }

    // Methods to handle notifications about item actions, state changes, and payments (not implemented in this case)
    @Override
    public void notifyItemAdded(Item item) {
        // Not implemented
    }

    @Override
    public void notifyItemRemoved(Item item) {
        // Not implemented
    }

    @Override
    public void notifyStateChange(SessionStatus state) {
        // Not implemented
    }

    @Override
    public void notifyRefresh() {
        // Not implemented
    }

    @Override
    public void notifyPaymentAdded(BigDecimal value) {
        // Not implemented
    }

    @Override
    public void notifyPaymentWindowClosed() {
        // Not implemented
    }

    @Override
    public void notifyInvalidCardRead(Card card) {
        // Not implemented
    }
}
