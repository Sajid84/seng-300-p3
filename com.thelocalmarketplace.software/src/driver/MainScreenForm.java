package driver;

import com.jjjwelectronics.Item;
import com.jjjwelectronics.card.Card;
import com.jjjwelectronics.screen.ITouchScreen;
import managers.SystemManager;
import enums.SessionStatus;
import managers.interfaces.IScreen;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;

public class MainScreenForm implements IScreen {
    protected JPanel root;
    protected SystemManager sm;
    protected ITouchScreen tch;

    // card views
    public final String smf_name = "System Manager Form";
    protected final SystemManagerForm smf;
    public final String landing_name = "Landing Screen";
    protected final LandingPage lp;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        root = new JPanel();
        root.setLayout(new CardLayout(0, 0));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return root;
    }

    public MainScreenForm(SystemManager sm) {
        this.sm = sm;

        // listening for the events emitted from the system manager
        sm.attach(this);

        // creating the system manager form
        smf = new SystemManagerForm(sm);
        lp = new LandingPage(sm);

        // adding cards
        root.add(smf.getPanel(), smf_name);
        root.add(lp.getPanel(), landing_name);
    }

    @Override
    public JPanel getPanel() {
        return root;
    }

    @Override
    public JFrame getFrame() {
        throw new UnsupportedOperationException("This object does not have a JFrame");
    }

    @Override
    public void configure(ITouchScreen touchScreen) {
        // saving a reference
        tch = touchScreen;

        // updating the touch screen
        touchScreen.getFrame().setContentPane(root);

        // configuring
        smf.configure(touchScreen);
        lp.configure(touchScreen);

        // logic to change views
        lp.getStartSessionButton().addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // switching the main view
                CardLayout layout = (CardLayout) root.getLayout();
                layout.show(root, smf_name);
            }
        });

        // switching views
        CardLayout layout = (CardLayout) root.getLayout();
        layout.show(root, landing_name);
    }

    @Override
    public void notifyItemAdded(Item item) {
        // do nothing with this event
    }

    @Override
    public void notifyItemRemoved(Item item) {
        // do nothing with this event
    }

    @Override
    public void notifyStateChange(SessionStatus state) {
        switch (state) {
            case NORMAL -> {
            }
            case BLOCKED -> {
            }
            case PAID -> {
            }
            case DISABLED -> {
                handleDisabled();
            }
        }
    }

    protected void handleDisabled() {
        // TODO implement the logic here
    }

    @Override
    public void notifyRefresh() {
        // do nothing with this event
    }

    @Override
    public void notifyPaymentAdded(BigDecimal value) {
        // do nothing with this event
    }

    @Override
    public void notifyPaymentWindowClosed() {
        // do nothing with this event
    }

    @Override
    public void notifyInvalidCardRead(Card card) {
        // do nothing with this event
    }
}
